# Path to your oh-my-zsh installation.
export ZSH=$ZDOTFILESDIR/oh-my-zsh

# Use another custom folder than $ZSH/custom
export ZSH_CUSTOM=$ZDOTFILESDIR/custom
export ZSH_COMPDUMP=$HOME/.zcompdump

# Set name of the theme to load.
# Optionally, if you set this to "random", it'll load a random theme each
ZSH_THEME="alanpeabody"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker globalias)

# User configuration
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export DISABLE_AUTO_UPDATE="true"

source $ZSH/oh-my-zsh.sh
# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Prompts
function py_date_ms() {
    python3 -c "from datetime import datetime; print(int(datetime.now().timestamp() * 1000))"
}

# Variables to store timing information
typeset -g COMMAND_START_TIME
typeset -g LAST_COMMAND_TIME

# Function to record start time before each command
function record_command_start() {
    COMMAND_START_TIME=$(py_date_ms)
}

# Function to calculate command execution time
function calculate_command_time() {
    if [ -n "$COMMAND_START_TIME" ]; then
        LAST_COMMAND_TIME=$(( $(py_date_ms) - COMMAND_START_TIME ))
        unset COMMAND_START_TIME
    else
        # Reset LAST_COMMAND_TIME if no command was run
        unset LAST_COMMAND_TIME
    fi
}

# Function to record start time before each prompt
function record_start_time() {
    PROMPT_START_TIME=$(py_date_ms)
}

# Add the functions to hooks
preexec_functions+=(record_command_start)
precmd_functions+=(calculate_command_time record_start_time)

PROMPT='
%{$bg[blue]%}%{$fg[black]%}'$(date)'%{$reset_color%} $(git_current_branch)
'$PROMPT

# Calculate prompt generation time in RPROMPT
RPROMPT='$(( $(py_date_ms) - $PROMPT_START_TIME ))ms${LAST_COMMAND_TIME:+/${LAST_COMMAND_TIME}ms$'\n'}'
